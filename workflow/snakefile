import os
import yaml
from pathlib import Path

configfile_location = "config/config.yaml"
configfile: configfile_location

data_location = Path(config["data_location"])
SAMPLES = [str(x).split("/")[-1] for x in data_location.iterdir() if x.is_dir() and str(x).split("/")[-1] not in ["log", "config", "breakpointR-pipeline"]]
config["samples"] = SAMPLES

# saving a custom copy of the config file
new_config_loc = data_location.joinpath("breakpointR-pipeline", "config")
Path(new_config_loc).mkdir(parents=True, exist_ok=True)

# save the config the first time only
new_config = new_config_loc.joinpath("config.yaml")
if not new_config.is_file():
    with open(new_config, "w") as file:
        yaml.safe_dump(config, file)

configfile_location = new_config_loc

print(config)

rule all:
    input: 
        counts_bp_plot=expand("{sctrip_dir}/breakpointR-pipeline/{sample}/analysis/plots/counts_bp.pdf", sctrip_dir=config["data_location"], sample=SAMPLES),
        bp_overview_plot=expand("{sctrip_dir}/breakpointR-pipeline/{sample}/analysis/plots/bp_overview.pdf", sctrip_dir=config["data_location"], sample=SAMPLES),
        counts_violin=expand("{sctrip_dir}/breakpointR-pipeline/{sample}/analysis/plots/bp_counts_violin.pdf", sctrip_dir=config["data_location"], sample=SAMPLES),
        counts_chr_violin=expand("{sctrip_dir}/breakpointR-pipeline/{sample}/analysis/plots/bp_counts_chr_violin.pdf", sctrip_dir=config["data_location"], sample=SAMPLES)


include: "rules/get_input_bam.smk"
include: "rules/breakpointR.smk"
include: "rules/analysis_plotting.smk"
